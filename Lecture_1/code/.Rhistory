install.packages("palmerpenguins")
# Your code here
library(palmerpenguins)
library(tidyverse)
data("penguins")
summary(penguins)
# Your code here to explore the penguins dataset
# Your code here
# Here your code
# Here your code
# Here your code
# Here your code
# Here your code
# Here your code
data("penguins")
data("penguins")
# Your code here to explore the penguins dataset
?penguins
# Your code here
penguins <- penguins %>%
na.omit
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length, y = bill_length_mm))
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm))
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = "red", size = 3, shape = 1))
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "red", size = 3, shape = 1)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "green", size = 3, shape = 1)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "red", size = 3, shape = 1)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "red", size = 3, shape = 2)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "red", size = 3, shape = 3)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, fill=1), color = "red", size = 3, shape = 1)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "red", size = 3, shape = 1)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, fill="red"), color = "red", size = 3, shape = 1)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, fill="green"), color = "red", size = 3, shape = 1)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "red", size = 3, shape = 1)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = species, shape = sex))
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, shape = sex, color = species)) +
labs(title="Penguin Flipper and Bill length", subtitle = "plot by me", caption = "Source: Penguins") +
xlab("Flippel length") +
ylab("Bill length")
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, shape = sex, color = species)) +
labs(title="Penguin Flipper and Bill length", subtitle = "Plot by me", caption = "Source: Penguins") +
xlab("Flippel length") +
ylab("Bill length")
#Here your code for boxplot
ggplot() +
geom_boxplot(data = penguins, aes(x = species, y = body_mass_g, fill=sex)) +
ylab("body mass in grams")
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, shape = sex, color = species)) +
labs(title="Penguin Flipper and Bill length", subtitle = "Plot by me", caption = "Source: Penguins") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Flippel length") +
ylab("Bill length")
# Here your code for separate graphs for islands
ggplot() +
geom_boxplot(data = penguins, aes(x = species, y = body_mass_g, fill = sex)) +
ylab("body mass in grams") +
facet_wrap(~ islands)
# Here your code for separate graphs for islands
ggplot() +
geom_boxplot(data = penguins, aes(x = species, y = body_mass_g, fill = sex)) +
ylab("body mass in grams") +
facet_wrap(~ island)
# Your code here
library(palmerpenguins)
library(tidyverse)
data("penguins")
summary(penguins)
# Your code here to explore the penguins dataset
?penguins
# Your code here
penguins <- penguins %>%
na.omit
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm))
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "red", size = 3, shape = 1)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = species, shape = sex))
# Here the function theme was added to center the text. This was optional
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, shape = sex, color = species)) +
labs(title="Penguin Flipper and Bill length", subtitle = "Plot by me", caption = "Source: Penguins") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Flippel length") +
ylab("Bill length")
#Here your code for boxplot
ggplot() +
geom_boxplot(data = penguins, aes(x = species, y = body_mass_g, fill = sex)) +
ylab("body mass in grams")
# Here your code
ggplot() +
geom_boxplot(data = penguins, aes(x = species, y = body_mass_g, fill = sex)) +
ylab("body mass in grams") +
facet_wrap(~ island) +
scale_fill_manual(values = c("female" = "mediumblue", "male" = "#DA020E" ))
# Here your code
library(readxl)
library(tidyverse)
# Here your code
library(readxl)
library(tidyverse)
# Here your code
football <- read.csv2("../sourcedata/voetbal.csv")
# Here your code
football
# Here your code
head(football)
tail(football)
# Here your code
football1 <- read.csv2("../sourcedata/N1.csv")
# Here your code
head(football1)
# Here your code
football2 <- read.csv
# Here your code
football2 <- read.csv("../sourcedata/N1.csv")
# Here your code
head(football2)
# Here your code
football_points <- read_excel("../sourcedata/football.xlsx")
# Here your code
football_points <- read_excel("../sourcedata/football.xls", skip = 3)
# Here your code
football_points <- read_excel("../sourcedata/football.xlsx", skip = 3)
football_budget <- read_xlsx("../sourcedata/football.xlsx", sheet = "Budgets", skip = 3)
head(football_budget)
# Here your code
gender <- read.csv("../sourcedata/gender.csv")
# Here your code
str(gender)
View(gender)
View(gender)
View(gender)
View(gender)
# Here your code
gender <- read.csv("../sourcedata/gender.csv", sep=";")
# Here your code
str(gender)
View(gender)
View(gender)
# Here your code
str(gender)
gender$Gender <- as.character(gender$Gender)
gender$Number <- as.factor(gender$Number)
# Here your code
str(gender)
# Here your code
str(gender)
# Here your code
gender$Number1 <- as.numeric(gender$Number)
# Here your code
str(gender)
gender$Number2 <- as.numeric(as.character(gender$Number))
gender
gender$Gender <- as.character(gender$Gender)
View(gender)
View(gender)
# Here your code
gender <- read.csv("../sourcedata/gender.csv", sep=";")
View(gender)
View(gender)
# Here your code
str(gender)
gender$Gender <- as.character(gender$Gender)
gender$Number <- as.factor(gender$Number)
# Here your code
gender <- read.csv("../sourcedata/gender.csv", sep=";")
View(gender)
View(gender)
gender$Gender <- as.character(gender$Gender)
# Here your code
str(gender)
# Here your code
gender$Number1 <- as.numeric(gender$Number)
# Here your code
str(gender)
View(gender)
View(gender)
gender$Number <- as.factor(gender$Number)
# Here your code
str(gender)
# Here your code
gender$Number1 <- as.numeric(gender$Number)
# Here your code
str(gender)
gender$Number3 <- as.numeric(gender$Number)
gender
gender$Number3 <- as.character(gender$Number)
gender
gender$Number3 <- as.numeric(as.character(gender$Number))
gender
# Your code here to explore the penguins dataset
?penguins
View(penguins)
View(penguins)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "red")
# Your code here
library(palmerpenguins)
library(tidyverse)
data("penguins")
summary(penguins)
# Your code here to explore the penguins dataset
?penguins
# Your code here
penguins <- penguins %>%
na.omit
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "red")
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "blue")
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = islands))
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = island))
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = "island"))
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = "red"))
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = "blue"))
# Here your code
library(readxl)
library(tidyverse)
# Here your code
football <- read.csv2("../sourcedata/voetbal.csv")
# Here your code
football
# Here your code
head(football)
# Here your code
tail(football)
# Here your code
football1 <- read.csv2("../sourcedata/N1.csv")
# Here your code
head(football1)
# Here your code
football2 <- read.csv("../sourcedata/N1.csv", sep=",")
# Here your code
head(football2)
# Here your code
football_points <- read_excel("../sourcedata/football.xlsx")
# Here your code
football_points <- read_excel("../sourcedata/football.xlsx", skip = 3)
football_budget <- read_xlsx("../sourcedata/football.xlsx", sheet = "Budgets", skip = 3)
head(football_budget)
write.csv2(football, file = "../sourcedata/Myfootballdata.csv")
# Here your code
gender <- read.csv("../sourcedata/gender.csv", sep=";")
# Here your code
str(gender)
gender$Gender <- as.character(gender$Gender)
gender$Number <- as.factor(gender$Number)
# Here your code
str(gender)
# Here your code
gender$Number1 <- as.numeric(gender$Number)
# Here your code
str(gender)
gender$Number2 <- as.numeric(as.character(gender$Number))
gender
View(gender)
View(gender)
# Here your code
gender <- read.csv("../sourcedata/gender.csv", sep=";")
gender$Gender <- as.character(gender$Gender)
gender$Number <- as.factor(gender$Number)
# Here your code
gender$Number1 <- as.numeric(gender$Number)
gender$Number2 <- as.numeric(as.character(gender$Number))
gender$Number3 <- as.character(gender$Number)
gender
gender$Number2 <- as.numeric(as.character(gender$Number))
gender$Number3 <- as.character(gender$Number)
gender$Number4 <- as.numeric(gender$Number)
gender
gender$Number2 <- as.numeric(as.character(gender$Number))
gender$Number3 <- as.character(gender$Number)
gender$Number4 <- as.numeric(gender$Number)
gender$Number5 <- as.numeric(gender$Number3)
gender
# Here your code
library(gapminder)
library(tidyverse)
library(ggrepel)
options(scipen=999)
summary(gapminder)
# Here your code
Countries <- c("Netherlands", "Belgium", "Germany", "France", "United Kingdom")
df1 <- subset(gapminder, subset = country %in% Countries)
# Here your code
ggplot() +
geom_line(data = df1, aes(x = year, y = lifeExp, color = country)) +
theme_classic()
Student <- "Gertjan"
ifelse(Student == "Gertjan", "Yes, we are right", "No, we are wrong")
ifelse(Student == "Misja", "Yes, we are right", "No, we are wrong")
# Here your code
df2 <- df1 %>% mutate(Netherlands = as.factor(ifelse(country == "Netherlands", 1, 0)))
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange")) +
theme(legend.position = "none") +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3))
# Here your code
df3 <- gapminder %>%
select(contains("o") | year) %>%
arrange(desc(pop)) %>%
mutate(ranking = 1:length(country)) %>%
filter(ranking %in% c(27, 531))
df3
# Here your code
df4 <- filter(gapminder, year == 2007) %>%
group_by(continent) %>%
summarise(Mean_LE = weighted.mean(lifeExp, pop), Mean_GDP = weighted.mean(gdpPercap, pop), .groups = "drop") %>%
arrange(desc(Mean_GDP))
# Here your code
ggplot() +
geom_point(data = df4, aes(x = Mean_LE, y = reorder(continent, Mean_LE), size = Mean_GDP), color = "blue") +
geom_segment(aes(x = 0, y = continent, xend = Mean_LE, yend = continent, group = continent), data = df4, color = "blue") +
labs(caption = "source: gapminder dataset", y = "", x = "Weighted mean of life expectancy", size = "Weighted mean \nof GDP\nper capita")
# Here your code
LabelCountries = c("Japan", "Spain", "Netherlands", "United States", "Chile", "Mexico", "China", "Pakistan", "India", "Guinea-Bissau", "Swaziland")
FinalPlotData <- gapminder %>%
filter(year == 2007)
LabelData <- FinalPlotData[ FinalPlotData$country %in% LabelCountries, ]
NoLabelData <- FinalPlotData[ ! FinalPlotData$country %in% LabelCountries, ]
ggplot(data = LabelData, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point(data = NoLabelData, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point() +
geom_text_repel(aes(label = country), color = "black", size = 3, min.segment.length = unit(0, "lines"), nudge_y = .2) +
labs(x = "Log of GDP per capita", y = "Life expectancy", color = "Continent", size = "Population", caption = "source: Gapminder") +
scale_x_log10()
View(df2)
View(df2)
View(df2)
View(df2)
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange")) +
theme(legend.position = "none") +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3))
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange")) +
scale_fill_discrete(name = "Country", labels = c("Netherlands", "Non-Netherlands", "C"))
theme(legend.position = "none") +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3))
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange")) +
scale_fill_discrete(name = "Country", labels = c("Netherlands", "Non-Netherlands", "C")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3))
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange")) +
scale_fill_discrete(name = "Country", labels = c("Netherlands", "Non-Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3))
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange")) +
scale_color_discrete(name = "Country", labels = c("Netherlands", "Non-Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3))
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Netherlands", "Non-Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3))
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Netherlands", "Non-Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3), legend.position = "none")
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Netherlands", "Non-Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3), legend.position = "none") +
guides(alpha = FALSE)
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Netherlands", "Non-Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3)) +
guides(alpha = FALSE)
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Not Netherlands", "")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3)) +
guides(alpha = FALSE)
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Not Netherlands", "Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3)) +
guides(alpha = FALSE)
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange"), name = "sfdlksdfdkj", labels = c("Not Netherlands", "Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3))
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Not Netherlands", "Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3))
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Not Netherlands", "Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3)) +
guides(alpha = FALSE, color = TRUE)
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, group = country, alpha = Netherlands)) +
xlab("Year") +
ylab("Life expectancy") +
scale_color_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Not Netherlands", "Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3)) +
guides(alpha = FALSE)
