# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm))
# Your code here
library(palmerpenguins)
library(tidyverse)
data("penguins")
summary(penguins)
# Your code here to explore the penguins dataset
?penguins
# Your code here
penguins <- penguins %>%
na.omit
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm))
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm), color = "red", size = 3, shape = 1)
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = species, shape = sex))
# Here the function theme was added to center the text. This was optional
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, shape = sex, color = species)) +
labs(title="Penguin Flipper and Bill length", subtitle = "Plot by me", caption = "Source: Penguins") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Flippel length") +
ylab("Bill length")
#Here your code for boxplot
ggplot() +
geom_boxplot(data = penguins, aes(x = species, y = body_mass_g, fill = sex)) +
ylab("body mass in grams")
# Here your code for separate graphs for islands
ggplot() +
geom_boxplot(data = penguins, aes(x = species, y = body_mass_g, fill = sex)) +
ylab("body mass in grams") +
facet_wrap(~ island)
# Here your code
ggplot() +
geom_boxplot(data = penguins, aes(x = species, y = body_mass_g, fill = sex)) +
ylab("body mass in grams") +
facet_wrap(~ island) +
scale_fill_manual(values = c("female" = "mediumblue", "male" = "#DA020E"))
# Here your code
ggplot() +
geom_point(data = penguins, aes(x = flipper_length_mm, y = bill_length_mm, shape = sex, color = species)) +
labs(title="Penguin Flipper and Bill length", subtitle = "Plot by me", caption = "Source: Penguins") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Flippel length") +
ylab("Bill length")
# Here your code
ggplot() +
geom_boxplot(data = penguins, aes(x = species, y = body_mass_g, fill = sex)) +
ylab("body mass in grams") +
facet_wrap(~ island)
#Here your code for boxplot
ggplot() +
geom_boxplot(data = penguins, aes(x = species, y = body_mass_g, fill = sex)) +
ylab("body mass in grams")
# Here your code
ggplot() +
geom_boxplot(data = penguins, aes(x = species, y = body_mass_g, fill = sex)) +
ylab("body mass in grams") +
facet_wrap(~ island) +
scale_fill_manual(values = c("female" = "mediumblue", "male" = "#DA020E"))
# Here your code
football_points <- read_excel("~/BSc Economics - TiU/Semester 2/Programming in R and Python/Assignments/R/Programming21_student_V2/Rprogramming21_student/Lecture_1/sourcedata/football.xlsx")
# Here your code
library(tidyverse)
library(readxl)
# Here your code
football <- read.csv("~/BSc Economics - TiU/Semester 2/Programming in R and Python/Assignments/R/Programming21_student_V2/Rprogramming21_student/Lecture_1/sourcedata/voetbal.csv")
# Here your code
football
# Here your code
head(football)
# Here your code
tail(football)
# Here your code
football1 <- read.csv2("~/BSc Economics - TiU/Semester 2/Programming in R and Python/Assignments/R/Programming21_student_V2/Rprogramming21_student/Lecture_1/sourcedata/N1.csv")
# Here your code
head(football1)
# Here your code
football2 <- read.csv("~/BSc Economics - TiU/Semester 2/Programming in R and Python/Assignments/R/Programming21_student_V2/Rprogramming21_student/Lecture_1/sourcedata/N1.csv", sep = ",")
# Here your code
head(football2)
# Here your code
football_points <- read_excel("~/BSc Economics - TiU/Semester 2/Programming in R and Python/Assignments/R/Programming21_student_V2/Rprogramming21_student/Lecture_1/sourcedata/football.xlsx")
# Here your code
football_points <- read_excel("~/BSc Economics - TiU/Semester 2/Programming in R and Python/Assignments/R/Programming21_student_V2/Rprogramming21_student/Lecture_1/sourcedata/football.xlsx",
skip = 1)
football_budget <- read_xlsx("../sourcedata/football.xlsx", sheet = "Budgets", skip = 3)
head(football_budget)
write.csv2(football, file = "../sourcedata/Myfootballdata.csv")
# Here your code
gender <- read.csv("~/BSc Economics - TiU/Semester 2/Programming in R and Python/Assignments/R/Programming21_student_V2/Rprogramming21_student/Lecture_1/sourcedata/gender.csv", sep = ";")
# Here your code
str(gender)
gender$Gender <- as.character(gender$Gender)
gender$Number <- as.factor(gender$Number)
# Here your code
str(gender)
# Here your code
gender$Number1 <- as.numeric(gender$Number)
# Here your code
str(gender)
gender$Number2 <- as.numeric(as.character(gender$Number))
gender
summary(gender)
# Here your code
df2 <- df1 %>%
mutate(Netherlands = as.factor(ifelse(country == "Netherlands", "1", "0")))
# Here your code
library(tidyverse)
library(gapminder)
library(ggrepel)
options(scipen=999)
summary(gapminder)
# Here your code
Countries <- c("Netherlands", "Belgium", "Germany", "France", "United Kingdom")
df1 <- gapminder %>%
filter(country %in% Countries)
# Here your code
ggplot() +
geom_line(data = df1, aes(x = year, y = lifeExp, color = country)) +
theme_bw()
Student <- "Gertjan"
ifelse(Student == "Gertjan", "Yes, we are right", "No, we are wrong")
ifelse(Student == "Misja", "Yes, we are right", "No, we are wrong")
# Here your code
df2 <- df1 %>%
mutate(Netherlands = as.factor(ifelse(country == "Netherlands", "1", "0")))
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, alpha = Netherlands, group = country)) +
scale_colour_manual(values = c("0" = "grey", "1" = "orange")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3)) +
theme_bw()
# Here your code
df3 <- gapminder %>%
select(contains("o") | year) %>%
arrange(-pop) %>%
mutate(ranking = 1:length(country)) %>%
filter(ranking == 27 | ranking == 531)
# Here your code
df4 <- gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarise(Mean_LE = weighted.mean(lifeExp, pop), Mean_GDP = weighted.mean(gdpPercap, pop)) %>%
arrange(-Mean_GDP)
# Here your code
ggplot() +
geom_point(data = df4, aes(x = Mean_LE, y = reorder(continent, Mean_LE), size = Mean_GDP), color = "blue") +
labs(x = "Weighted mean of life expectancy", y = "", legend = "Weighted mean of GDP per capita", caption = "source: gapminder dataset", size = "Weighted mean \nof GDP \nper capita") +
theme_bw() +
xlim(0, 85) +
geom_segment(data = df4, aes(y = continent, yend = continent, x = 0, xend = Mean_LE), color = "blue")
# Here your code
countries_label <- gapminder %>%
filter(country %in% c("Guinea-Bissau", "Swaziland", "India", "Pakistan", "China", "Mexico", "Chile", "Spain", "Netherlands", "United States", "Japan") & year == 2007)
countries_nolabel <- gapminder %>%
filter(! (country %in% c("Guinea-Bissau", "Swaziland", "India", "Pakistan", "China", "Mexico", "Chile", "Spain", "Netherlands", "United States", "Japan")) & year == 2007)
ggplot(data = countries_label, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point(data = countries_nolabel, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point() +
geom_text_repel(aes(label = country), color = "black", size = 3, min.segment.length = unit(0, "lines"), nudge_y = .2) +
labs(x = "Log of GDP per capita", y = "Life expectancy", color = "Continent", size = "Population", caption = "source: Gapminder") +
scale_x_log10()
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, alpha = Netherlands, group = country)) +
scale_colour_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Not Netherlands", "Netherlands")) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3)) +
theme_bw()
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, alpha = Netherlands, group = country)) +
scale_colour_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Not Netherlands", "Netherlands")) +
guides(alpha = FALSE) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3)) +
theme_bw()
# Here your code
ggplot() +
geom_point(data = df4, aes(x = Mean_LE, y = reorder(continent, Mean_LE), size = Mean_GDP), color = "blue") +
labs(x = "Weighted mean of life expectancy", y = "", legend = "Weighted mean of GDP per capita", caption = "source: gapminder dataset", size = "Weighted mean \nof GDP \nper capita") +
theme_bw() +
geom_segment(data = df4, aes(y = continent, yend = continent, x = 0, xend = Mean_LE), color = "blue")
# Here your code
countries_label <- gapminder %>%
filter(country %in% c("Guinea-Bissau", "Swaziland", "India", "Pakistan", "China", "Mexico", "Chile", "Spain", "Netherlands", "United States", "Japan") & year == 2007)
countries_nolabel <- gapminder %>%
filter(! (country %in% c("Guinea-Bissau", "Swaziland", "India", "Pakistan", "China", "Mexico", "Chile", "Spain", "Netherlands", "United States", "Japan")) & year == 2007)
ggplot(data = countries_label, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point(data = countries_nolabel, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point() +
geom_text_repel(aes(label = country), color = "black", size = 3, min.segment.length = unit(0, "lines"), nudge_y = .2) +
labs(x = "Log of GDP per capita", y = "Life expectancy", color = "Continent", size = "Population", caption = "source: Gapminder") +
scale_x_log10()
# Here your code
library(tidyverse)
library(gapminder)
library(ggrepel)
options(scipen=999)
summary(gapminder)
# Here your code
Countries <- c("Netherlands", "Belgium", "Germany", "France", "United Kingdom")
df1 <- gapminder %>%
filter(country %in% Countries)
# Here your code
ggplot() +
geom_line(data = df1, aes(x = year, y = lifeExp, color = country)) +
theme_bw()
Student <- "Gertjan"
ifelse(Student == "Gertjan", "Yes, we are right", "No, we are wrong")
ifelse(Student == "Misja", "Yes, we are right", "No, we are wrong")
# Here your code
df2 <- df1 %>%
mutate(Netherlands = as.factor(ifelse(country == "Netherlands", "1", "0")))
# Here your code
ggplot() +
geom_line(data = df2, aes(x = year, y = lifeExp, color = Netherlands, alpha = Netherlands, group = country)) +
scale_colour_manual(values = c("0" = "grey", "1" = "orange"), name = "Country", labels = c("Not Netherlands", "Netherlands")) +
guides(alpha = FALSE) +
scale_alpha_manual(values = c("1" = 1, "0" = 0.3)) +
theme_bw()
# Here your code
df3 <- gapminder %>%
select(contains("o") | year) %>%
arrange(-pop) %>%
mutate(ranking = 1:length(country)) %>%
filter(ranking == 27 | ranking == 531)
# Here your code
df4 <- gapminder %>%
filter(year == 2007) %>%
group_by(continent) %>%
summarise(Mean_LE = weighted.mean(lifeExp, pop), Mean_GDP = weighted.mean(gdpPercap, pop)) %>%
arrange(-Mean_GDP)
# Here your code
ggplot() +
geom_point(data = df4, aes(x = Mean_LE, y = reorder(continent, Mean_LE), size = Mean_GDP), color = "blue") +
labs(x = "Weighted mean of life expectancy", y = "", legend = "Weighted mean of GDP per capita", caption = "source: gapminder dataset", size = "Weighted mean \nof GDP \nper capita") +
theme_bw() +
geom_segment(data = df4, aes(y = continent, yend = continent, x = 0, xend = Mean_LE), color = "blue")
# Here your code
countries_label <- gapminder %>%
filter(country %in% c("Guinea-Bissau", "Swaziland", "India", "Pakistan", "China", "Mexico", "Chile", "Spain", "Netherlands", "United States", "Japan") & year == 2007)
countries_nolabel <- gapminder %>%
filter(! (country %in% c("Guinea-Bissau", "Swaziland", "India", "Pakistan", "China", "Mexico", "Chile", "Spain", "Netherlands", "United States", "Japan")) & year == 2007)
ggplot(data = countries_label, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point(data = countries_nolabel, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +
geom_point() +
geom_text_repel(aes(label = country), color = "black", size = 3, min.segment.length = unit(0, "lines"), nudge_y = .2) +
labs(x = "Log of GDP per capita", y = "Life expectancy", color = "Continent", size = "Population", caption = "source: Gapminder") +
scale_x_log10()
# Here your code
ggplot() +
geom_bar(data = df4, aes(x = reorder(Country, desc(Growth)), fill = Country, weight = Growth)) +
labs(x = "", y = "Growth") +
theme(legend.position = "none") +
theme_bw()
# Here your code
library(tidyverse)
library(readxl)
# Run this code
data1 <- data.frame(
Hospital = c("Gigant", "Moloch", "Mega"),
Revenue = c(100, 95, 90),
stringsAsFactors = FALSE
)
print(data1)
# Run this code
data2 <- data.frame(
Hospital = c("Gigant", "Moloch", "Maverick"),
Profit = c(10, 11, 5),
stringsAsFactors = FALSE
)
print(data2)
# Here your code
data3_merged <- merge(data1, data2, by = "Hospital")
print(data3_merged)
# Here your code
data4_fulljoin <- full_join(data1, data2, by="Hospital")
data4_fulljoin
# Here your code
data5_innerjoin <- inner_join(data1, data2, by="Hospital")
data5_innerjoin
# Here your code
data6_leftjoin <- left_join(data1, data2, by="Hospital")
data6_leftjoin
# Here your code
data7_rightjoin <- right_join(data1, data2, by="Hospital")
data7_rightjoin
# Here your code
data8_antijoin <- anti_join(data1, data2, by="Hospital")
data8_antijoin
# Here your code
data9_semijoin <- semi_join(data1, data2, by="Hospital")
data9_semijoin
data2a <- data2 %>%
arrange(-Profit)
print(data2a)
# Here your code
data1_2a_cbind <- cbind(data1, data2a)
data1_2a_cbind
data1a <- data.frame(
Hospital = c("Giga"),
Revenue = c("1000")
)
print(data1a)
# Here your code
data1_1a_rbind <- rbind(data1, data1a)
data1_1a_rbind
# Here your code
OECD_Health_Statistics_2020_Frequently_Requested_Data <- read_excel("../sourcedata/OECD-Health-Statistics-2020-Frequently-Requested-Data.xls",
sheet = "Curr exp, per capita US$PPP", skip = 3, n_max = 39)
colnames(OECD_Health_Statistics_2020_Frequently_Requested_Data)[1] <- "Country"
colnames(OECD_Health_Statistics_2020_Frequently_Requested_Data)[colnames(OECD_Health_Statistics_2020_Frequently_Requested_Data) == "2019...51"] <- "2019"
data1 <- OECD_Health_Statistics_2020_Frequently_Requested_Data %>%
select(c("Country", "2011":"2019")) %>%
slice(1:5)
# Here your code
df2 <- data1 %>% pivot_longer(cols = "2011":"2019", names_to = "Year", values_to = "Expenditure")
# Here your code
df2$Year <- as.integer(df2$Year)
ggplot() +
geom_line(data = df2, aes(x = Year, y = Expenditure, color = Country)) +
scale_x_continuous(breaks = c(2011:2019)) +
labs(x = "", y = "Expenditure per capita in PPP", legend = "Country") +
theme_bw()
# Here your code
df3 <- subset(df2, Year %in% c(2018, 2019))
# Here your code
df4 <- df3 %>% pivot_wider(names_from = "Year", values_from = "Expenditure")
# Here your code
df4 <- df4 %>% mutate("Growth" = ((`2019` - `2018`)/`2018`))
# Here your code
ggplot() +
geom_bar(data = df4, aes(x = reorder(Country, desc(Growth)), fill = Country, weight = Growth)) +
labs(x = "", y = "Growth") +
theme(legend.position = "none") +
theme_bw()
# my cool new function
my_func <- function(x){
# your code here
variance <- mean(x^2) - mean(x)^2
variance
}
# test your function,
N <- length(vec)
vec <- c(2, 4, 6, 9)
# my cool new function
my_func <- function(x){
# your code here
variance <- mean(x^2) - mean(x)^2
variance
}
# test your function,
N <- length(vec)
corr <- N/(N-1)
my_func(vec) * corr
# should be equal
var(vec)
LETTERS
NUMBERS
LETTERS
LETTERS * 2
LETTERS + "Y"
paste(LETTERS, y)
paste(LETTERS, "y")
